import numpy as np
from blottogame import BlottoGame
from stratfunctions import RandoDist, RandoStrat

highscorers = []
highscorers.append([18, 20, 10, 10, 8, 2, 2, 10, 10, 10])   #these strats are highscorers in the test script
highscorers.append([45, 23, 14, 1, 3, 1, 4, 3, 2, 2])
highscorers.append([16, 18, 10, 6, 10, 12, 2, 12, 10, 4])
highscorers.append([14, 22, 12, 6, 6, 10, 8, 10, 8, 4])
highscorers.append([18, 18, 16, 6, 8, 8, 2, 10, 8, 6])
highscorers.append([18, 22, 12, 8, 8, 8, 6, 4, 4, 10])

highscorers.append([16, 24, 12, 6, 2, 17, 5, 3, 11, 4]) #this is kate's vector

#generating more random strategy vectors to narrow down to 4 or fewer:
strategies = []

for i in range(10000): #add 100 strategies generated by RandoStrat function
    strategies.append(RandoStrat(100, 10))

for j in range(10000):    #add 100 strategies generated by RandoDist function with a inc size of 5
    strategies.append(RandoDist(100, 10, 2))


scores = []
avgscore = []
for k in range(len(highscorers)):
    for l in range(20000):
        temp = BlottoGame(highscorers[k], strategies[l], 10) #play a game between that highscorer and every random strat
        scores.append(temp)
    avgscore.append(np.mean(scores))    #mean of the scores of that list added to master list of averages
    scores = []     #reset the scores list

print(avgscore)

index = []      #this will store indices of high scoring vectors
for m in range(len(highscorers)):
    if avgscore[m] > 3.8:
        index.append(m)

for n in index:     #the consistently high scoring vectors are at indices 4, 5, and 8.
    print(n)
    print(highscorers[n])
    print(avgscore[n])