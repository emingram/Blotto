import numpy as np
from blottogame import BlottoGame
from stratfunctions import RandoDist, RandoStrat

highscorers = []
highscorers.append([40, 7, 2, 22, 6, 10, 1, 9, 1, 2])   #these strats are highscorers in the test script
highscorers.append([12, 43, 5, 15, 10, 7, 1, 5, 1, 1])
highscorers.append([49, 15, 11, 1, 4, 8, 3, 1, 5, 1])
highscorers.append([2, 6, 18, 18, 20, 1, 2, 1, 2, 30])
highscorers.append([6, 29, 17, 19, 1, 12, 11, 1, 3, 3])
highscorers.append([16, 11, 13, 5, 22, 7, 11, 12, 9, 4])
highscorers.append([6, 1, 17, 27, 6, 22, 13, 4, 3, 1])
highscorers.append([24, 7, 4, 26, 1, 4, 3, 28, 3, 3])
highscorers.append([9, 9, 19, 5, 17, 9, 19, 13, 2, 6])
highscorers.append([10, 34, 9, 1, 7, 2, 9, 23, 4, 2])

#generating more random strategy vectors to narrow down to 4 or fewer:
strategies = []

for i in range(10000): #add 100 strategies generated by RandoStrat function
    strategies.append(RandoStrat(100, 10))

for j in range(10000):    #add 100 strategies generated by RandoDist function with a inc size of 5
    strategies.append(RandoDist(100, 10, 2))


scores = []
avgscore = []
for k in range(len(highscorers)):
    for l in range(10000):
        temp = BlottoGame(highscorers[k], strategies[l], 10) #play a game between that highscorer and every random strat
        scores.append(temp)
    avgscore.append(np.mean(scores))    #mean of the scores of that list added to master list of averages
    scores = []     #reset the scores list

print(avgscore)

index = []      #this will store indices of high scoring vectors
for m in range(len(highscorers)):
    if avgscore[m] > 6:
        index.append(m)

for n in index:     #the consistently high scoring vectors are at indices 4, 5, and 8.
    print(n)
    print(highscorers[n])
    print(avgscore[n])